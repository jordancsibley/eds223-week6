---
title: "EDS-223 Week 6 Discussion"
format: html
editor_options: 
  chunk_output_type: inline
---

```{r}
library(tidyverse)
library(sf)
library(terra)
library(tmap)
library(tmaptools)
```

```{r}
# Set directory for folder
pre_fire_dir <- here::here("data", "LC80340322016189-SC20170128091153")

# Create a list of all images that have the extension .tif and contain the word band
pre_fire_bands <- list.files(pre_fire_dir,
                             pattern = glob2rx("*band*.tif$"),
                             full.names = TRUE)
# Create a raster stack
pre_fire_rast <- rast(pre_fire_bands)

# Read mask raster
pre_mask <- rast(here::here("data", "LC80340322016189-SC20170128091153", "LC80340322016189LGN00_cfmask_crop.tif"))

# Set directory for folder
post_fire_dir <- here::here("data", "LC80340322016205-SC20170127160728")

# Create a list of all images that have the extension .tif and contain the word band
post_fire_bands <- list.files(post_fire_dir,
                             pattern = glob2rx("*band*.tif$"),
                             full.names = TRUE)
# Create a raster stack
post_fire_rast <- rast(post_fire_bands)

# Read mask raster
post_mask <- rast(here::here("data", "LC80340322016189-SC20170128091153", "LC80340322016189LGN00_cfmask_crop.tif"))
```

```{r}
nbr_fun <- function(nir, swir2){
    (nir - swir2)/(nir + swir2)
}
```


## Tasks 

Now, to meet this week’s learning objectives, your task:

1. Rename the bands of the pre_fire and post_fire rasters using names()

```{r}
# Create a vector of band names 
bands <- c("Aerosol", "Blue", "Green", "Red", "NIR", "SWIR1", "SWIR2")

names(pre_fire_rast) <- bands
names(post_fire_rast) <- bands 
```


Next, for each of the pre_fire and post_fire rasters…

2. Mask out clouds and shadows with the pre_mask and post_mask rasters

- Hint: Set mask > 0 to NA

```{r}
# Mask clouds and shadows 
pre_mask[pre_mask > 0] <- NA
post_mask[post_mask > 0] <- NA

pre_fire_rast <- mask(pre_fire_rast, mask = pre_mask)
post_fire_rast <- mask(post_fire_rast, mask = post_mask)

```

```{r}
# Plot this mask 
plot(pre_fire_rast, colNA = "black")
plot(post_fire_rast, colNA = "black")
```


3. Plot a true color composite using plotRGB()

- Map the red band to the red channel, green to green, and blue to blue
- Apply a linear stretch “lin” or histogram equalization “hist”

```{r}
# Bands in appropirate colors and linear stretch 
plotRGB(pre_fire_rast, r = 4, g = 3, b = 2, stretch = 'lin', colNA = 'black')
```

```{r}
# Post 
plotRGB(post_fire_rast, r = 4, g = 3, b = 2, stretch = 'lin', colNA = 'black')

```


4. Plot two false color composite using plotRGB()

- Map the SWIR2 band to the red channel, NIR to green, and green to blue
- Apply a linear stretch “lin” or histogram equalization “hist”

```{r}
# r = 7, g = 5, b = 3

# Pre fire 
plotRGB(pre_fire_rast, r = 7, g = 5, b = 3, stretch = 'lin', colNA = 'black')


# Post fire 
plotRGB(post_fire_rast, r = 7, g = 5, b = 3, stretch = 'lin', colNA = 'black')

```


5. Calculate the normalized burn ratio (NBR)

nbr_fun <- function(nir, swir2){
    (nir - swir2)/(nir + swir2)
    
- Hint: Use lapp() like you previously did for NDVI and NDWI in Week 4

```{r}
# Pre
nbr_rast_pre <- terra::lapp(pre_fire_rast[[c(5, 7)]],
                        fun = nbr_fun)
par(mar = c(1, 1, 1, 1))
plot(nbr_rast_pre)


# Post 
nbr_rast_post <- terra::lapp(post_fire_rast[[c(5, 7)]],
                        fun = nbr_fun)

plot(nbr_rast_post)
```


6. Find the difference NBR
```{r}
# difference in pre and post normalized burn ratio 
diff_nbr <- nbr_rast_pre - nbr_rast_post
```

7. Plot the dnBR raster

```{r}
# Plot the difference raster 
plot(diff_nbr)
```
Bonus Challenge: Use classify() to assign the severity levels below:

FROM ANSWER KEY 
```{r}
# Set categories for severity levels
categories <- c("Enhanced Regrowth", "Unburned", "Low Severity", "Moderate Severity", "High Severity")

# Create reclassification matrix
rcl <- matrix(c(-Inf, -0.1, 1, # group 1 ranges for Enhanced Regrowth
                -0.1, 0.1, 2, # group 2 ranges for Unburned
                0.1, 0.27, 3, # group 3 ranges for Low Severity
                0.27, 0.66, 4, # group 4 ranges for Moderity Severity
                0.66, Inf, 5), # group 5 ranges for High Severity
                ncol = 3, byrow = TRUE)

# Use reclassification matrix to reclassify dNBR raster
reclassified <- classify(diff_nbr, rcl = rcl)

reclassified[is.nan(reclassified)] <- NA
```

```{r}
tm_shape(reclassified) +
  tm_raster(style = "cat",
            labels = c(categories, "Missing"),
            palette = get_brewer_pal("YlOrRd", n = 5, plot = FALSE),
            title = "Severity Level", colorNA = "black")+
  tm_layout(legend.outside = TRUE)
```

